{"version":3,"sources":["App.js","selectors.js","components/Canvas.js","reportWebVitals.js","reducers.js","store.js","index.js","actions.js"],"names":["hot","module","className","getData","state","gameData","connect","data","dispatch","updateGame","canvas","modal","text","ctx","x","y","paddleX","brickRowCount","brickColumnCount","brickSpace","brickWidth","brickPadding","brickHeight","brickOffsetTop","brickOffsetLeft","brickOffsetCap","brickCount","restarted","pauseGame","ballSpeed","Math","random","dx","dy","paddleWidth","rightPressed","leftPressed","bricks","brickColors","brickShiftLeft","brickSpeed","score","highScore","lives","bricksDestroyed","won","autoplay","draw","undefined","clearRect","width","height","font","fillStyle","fillText","c","r","status","brickX","brickY","beginPath","rect","fill","closePath","drawBricks","arc","PI","b","innerHTML","style","display","document","getElementById","classList","add","collisionDetection","requestAnimationFrame","getRandomColor","floor","useEffect","getContext","i","setup","addEventListener","e","key","target","note","contains","remove","candidateHighScore","id","window","innerWidth","innerHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","action","type","payload","UPDATE_GAME","max","persistConfig","storage","stateReconciler","autoMergeLevel2","rootReducer","combineReducers","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","render","loading","App"],"mappings":"0JAaeA,kBAAIC,EAAJD,EARf,WACE,OACE,qBAAKE,UAAU,MAAf,SACE,cAAC,IAAD,W,8ECROC,EAAU,SAAAC,GAAK,OAAIA,EAAMC,U,aCgVvBC,iBARS,SAAAF,GAAK,MAAK,CAChCG,KAAMJ,EAAQC,OAGW,SAAAI,GAAQ,MAAK,CACtCC,WAAY,SAAAF,GAAI,OAAIC,EAASC,YAAWF,QAG3BD,EA1UA,SAAC,GAA0B,IAIpCI,EACAC,EACAC,EAEAC,EAGAC,EACAC,EAMAC,EAKAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAhCYnB,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,WAElBkB,GAAY,EAKZC,GAAY,EAGZC,EAAY,IAAMC,KAAKC,SAAW,EAAI,EAGtCC,EAAK,EACLC,GAAM,EAGNC,EAA8B,GAAhBJ,KAAKC,SAAgB,GAGnCI,GAAe,EACfC,GAAc,EAadC,EAAS,GACTC,EAAc,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC7HC,GAAiB,EACjBC,EAA6B,GAAhBV,KAAKC,SAGlBU,EADYlC,EAAKkC,MAEjBC,EAAYnC,EAAKmC,UACjBC,EAAQpC,EAAKoC,MACbC,EAAkB,EAElBC,GAAM,EAENC,GAAW,EAkHf,SAASC,SACKC,IAARnC,IACFA,EAAIoC,UAAU,EAAG,EAAGvC,EAAOwC,MAAOxC,EAAOyC,QAP3CtC,EAAIuC,KAAO,iBACXvC,EAAIwC,UAAY,UAChBxC,EAAIyC,SAAS,eAAiBZ,EAAW,EAAG,KAR5C7B,EAAIuC,KAAO,iBACXvC,EAAIwC,UAAY,UAChBxC,EAAIyC,SAAS,UAAYb,EAAO,EAAG,KARnC5B,EAAIuC,KAAO,iBACXvC,EAAIwC,UAAY,UAChBxC,EAAIyC,SAAS,UAAYX,EAAO,EAAG,KAqB5Bf,KAzET,WACE,IAAK,IAAI2B,EAAI,EAAGA,EAAIrC,EAAkBqC,IACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIvC,EAAeuC,IACjC,GAA4B,IAAxBnB,EAAOkB,GAAGC,GAAGC,OAAc,CAC7B,IAAIC,EAAUH,GAAKnC,EAAaC,GAAiBG,EAC7CmC,EAAUH,GAAKlC,EAAcD,EAAe,GAAME,EACtDc,EAAOkB,GAAGC,GAAG1C,EAAI4C,EACjBrB,EAAOkB,GAAGC,GAAGzC,EAAI4C,EACjB9C,EAAI+C,YACJ/C,EAAIgD,KAAKH,EAAQC,EAAQvC,EAAYE,GACrCT,EAAIwC,UAAYf,EAAYkB,GAC5B3C,EAAIiD,OACJjD,EAAIkD,YAINxB,GACFf,GAAmBgB,IACI,IACrBD,GAAiB,IAInBf,GAAmBgB,IACIf,IACrBc,GAAiB,GAiDjByB,GA3CJnD,EAAI+C,YACJ/C,EAAIoD,IAAInD,EAAGC,EArHI,GAqHW,EAAa,EAAVe,KAAKoC,IAClCrD,EAAIwC,UAAY,UAChBxC,EAAIiD,OACJjD,EAAIkD,YAIJlD,EAAI+C,YAEF5C,EAAUF,EAAKoB,EAAc,EAE/BrB,EAAIgD,KAAK7C,EAASN,EAAOyC,OAzHR,GAyH+BjB,EAzH/B,IA0HjBrB,EAAIwC,UAAY,UAChBxC,EAAIiD,OACJjD,EAAIkD,YAkFN,WACE,IAAK,IAAIR,EAAI,EAAGA,EAAIrC,EAAkBqC,IACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIvC,EAAeuC,IAAK,CACtC,IAAIW,EAAI9B,EAAOkB,GAAGC,GACD,IAAbW,EAAEV,QACA3C,EAAIqD,EAAErD,GAAKA,EAAIqD,EAAErD,EAAIM,GAAcL,EAAIoD,EAAEpD,GAAKA,EAAIoD,EAAEpD,EAAIO,IACtDP,EAAIc,GAAasC,EAAEpD,GAAKA,GAAKoD,EAAEpD,EAAIO,EAAcO,EACnDI,GAAMA,EAGND,GAAMA,EAERmC,EAAEV,OAAS,EACXb,IACAH,GAAUxB,EAAgBuC,EACtBZ,IAAqB3B,EAAgBC,IAEvCN,EAAKwD,UAAY,0BAA4B3B,EAC7C9B,EAAM0D,MAAMC,QAAU,QACtBC,SAASC,eAAe,iBAAiBC,UAAUC,IAAI,OACvD9C,GAAY,EACZiB,GAAM,KAxEZ8B,IACI7D,EAAIkB,EAAKtB,EAAOwC,MAnKT,IAmK+BpC,EAAIkB,EAnKnC,MAoKTA,GAAMA,GAEJjB,EAAIkB,EAtKG,GAuKTA,GAAMA,EACGlB,EAAIkB,EAAKvB,EAAOyC,OAxKhB,KA0KLrC,EAAIE,GAAWF,EAAIE,EAAUkB,EAC/BD,GAAMA,EAKQ,MAFdU,GAIE/B,EAAKwD,UAAY,qBAAuB3B,EACxC9B,EAAM0D,MAAMC,QAAU,QACtBC,SAASC,eAAe,iBAAiBC,UAAUC,IAAI,QACvD9C,GAAY,EACZiB,GAAM,IAGN/B,EAAIJ,EAAOwC,MAAQ,EACnBnC,EAAIL,EAAOyC,OAAS,GACpBnB,EAAK,EACLC,GAAM,EACNjB,GAAWN,EAAOwC,MAAQhB,GAAe,IAI/CpB,GAAKkB,GAAMH,EAAYA,GAAae,EAAkBlB,IACtDX,GAAKkB,GAAMJ,EAAYA,GAAae,EAAkBlB,IAElDS,GACFnB,GAAW,GACGkB,EAAcxB,EAAOwC,QACjClC,EAAUN,EAAOwC,MAAQhB,GAGpBE,IACPpB,GAAW,GACG,IACZA,EAAU,GAGd4D,sBAAsB7B,KAkC5B,SAAS8B,IACP,OAAOvC,EAAYR,KAAKgD,MAAsB,GAAhBhD,KAAKC,WA0DrC,OArQAgD,qBAAU,YAKV,WACEpE,EAAQ4D,SAASC,eAAe,WAChC9D,EAAS6D,SAASC,eAAe,YACjC5D,EAAO2D,SAASC,eAAe,QAC/B3D,EAAMH,EAAOsE,WAAW,MACxB/D,EAAgBa,KAAKgD,MAAsB,EAAhBhD,KAAKC,SAAe,GAC/Cb,EAAmBY,KAAKgD,MAAsB,EAAhBhD,KAAKC,SAAe,GAGlDZ,EAAaT,EAAOwC,MAAQhC,EAC5BE,EAAaD,GAA8B,IAAhBW,KAAKC,SAAiB,KACjDV,EAAeF,EAAaC,EAC5BE,EAAcQ,KAAKgD,MAAM,GAAKhD,KAAKC,UAAY,GAK/CR,EAAiB,GACjBC,GAAmBd,EAAOwC,OAAShC,EAAmBC,EAAaE,IAAiB,EACpFI,EAAiBJ,EACjBK,EAAaT,EAAgBC,EAE7BJ,EAAIJ,EAAOwC,MAAQ,EACnBnC,EAAIL,EAAOyC,OAAS,GACpBnC,GAAWN,EAAOwC,MAAQhB,GAAe,EACrCY,EAGJ,IAAK,IAAImC,EAAI,EAAGA,EAAIhE,EAAegE,IACjC3C,EAAY2C,GAAKJ,IAEnB,IAAK,IAAItB,EAAI,EAAGA,EAAIrC,EAAkBqC,IAAK,CACzClB,EAAOkB,GAAK,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIvC,EAAeuC,IACjCnB,EAAOkB,GAAGC,GAAK,CAAE1C,EAAG,EAAGC,EAAG,EAAG0C,OAAQ,GAGzCV,IAxCAmC,MA8PFX,SAASY,iBAAiB,WAlD1B,SAAwBC,GACR,UAAVA,EAAEC,KAA6B,eAAVD,EAAEC,IACzBlD,GAAe,EAEE,SAAViD,EAAEC,KAA4B,cAAVD,EAAEC,MAC7BjD,GAAc,MA6CmC,GACrDmC,SAASY,iBAAiB,SA1C1B,SAAsBC,GACN,UAAVA,EAAEC,KAA6B,eAAVD,EAAEC,IACzBlD,GAAe,EAEE,SAAViD,EAAEC,KAA4B,cAAVD,EAAEC,MAC7BjD,GAAc,MAqC+B,GACjDmC,SAASY,iBAAiB,aAlC1B,SAA0BC,OAkC+B,GACzDb,SAASY,iBAAiB,aA1B1B,SAA0BC,GACxB,GAAIA,EAAEE,SAAW3E,IAAUgB,EAAW,CACpCA,GAAY,EACZhB,EAAM0D,MAAMC,QAAU,OACtB,IAAIiB,EAAOhB,SAASC,eAAe,iBAChCe,EAAKd,UAAUe,SAAS,SACzBD,EAAKd,UAAUgB,OAAO,QAErBF,EAAKd,UAAUe,SAAS,QACzBD,EAAKd,UAAUgB,OAAO,OAExB7D,GAAY,EAGVnB,EADEoC,EACS,CAAEJ,MAAOA,EAAOE,MAAOA,EAAO+C,mBAAoBjD,GAGlD,CAAEA,MAAO,EAAGE,MAAO,EAAG+C,mBAAoBjD,QASF,GAGvD,gCACE,qBAAKkD,GAAG,UAAUzF,UAAU,QAA5B,SACE,qBAAKyF,GAAG,gBAAgBzF,UAAU,gBAAlC,SACE,mBAAGyF,GAAG,aAGV,wBAAQA,GAAG,WAAWzC,MAAO0C,OAAOC,WAAY1C,OAAQyC,OAAOE,qB,wJCvTtDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sECHRQ,EAAe,CAAE/D,MAAO,EAAGC,UAAW,EAAGC,MAAO,GCEhD8D,EAAW,CACbpG,SDDoB,WAAoC,IAAlCD,EAAiC,uDAAzBoG,EAAcE,EAAW,uCAC/CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAOD,GACH,KAAKE,IAAc,IACPtG,EAASqG,EAATrG,KACR,OAAO,2BACAH,GADP,IAEIqC,MAAOlC,EAAKkC,MACZC,UAAWZ,KAAKgF,IAAI1G,EAAMsC,UAAWnC,EAAKmF,oBAC1C/C,MAAOpC,EAAKoC,QAGpB,QACI,OAAOvC,KCVb2G,EAAgB,CAClB1B,IAAK,OACL2B,YACAC,gBAAiBC,KAGfC,EAAcC,YAAgBX,GAC9BY,EAAmBC,YAAeP,EAAeI,G,QCPjDI,EDUFC,YACIH,GCVFI,EAAYC,YAAaH,GAE/BI,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,cAAD,CAAaE,UAAWA,EAAWI,QAAS,6CAA5C,SACE,cAACC,EAAA,EAAD,QAGJvD,SAASC,eAAe,SAM1BuB,K,+BCzBA,oEAAO,IAAMc,EAAc,cACdpG,EAAa,SAAAF,GAAI,MAAK,CAC/BoG,KAAME,EACND,QAAS,CAAErG,Y","file":"static/js/main.5448d4e4.chunk.js","sourcesContent":["import React from 'react';\nimport Canvas from './components/Canvas'\nimport {hot} from 'react-hot-loader';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Canvas />\n    </div>\n  );\n}\n\nexport default hot(module)(App);\n","export const getData = state => state.gameData;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getData } from '../selectors';\r\nimport { updateGame } from '../actions';\r\nimport './Canvas.css';\r\n\r\nconst Canvas = ({ data, updateGame }) => {\r\n\r\n  var restarted = false;\r\n\r\n  var canvas;\r\n  var modal;\r\n  var text;\r\n  var pauseGame = false;\r\n  var ctx;\r\n  var ballRadius = 10;\r\n  var ballSpeed = 2.5 * Math.random() * 2 + 2;\r\n  var x;\r\n  var y;\r\n  var dx = 1;\r\n  var dy = -1;\r\n\r\n  var paddleHeight = 10;\r\n  var paddleWidth = Math.random() * 75 + 75;\r\n  var paddleX;\r\n\r\n  var rightPressed = false;\r\n  var leftPressed = false;\r\n\r\n  var brickRowCount;\r\n  var brickColumnCount;\r\n  var brickSpace;\r\n  var brickWidth;\r\n  var brickPadding;\r\n  var brickHeight;\r\n  var brickOffsetTop;\r\n  var brickOffsetLeft;\r\n  var brickOffsetCap;\r\n  var brickCount;\r\n\r\n  var bricks = [];\r\n  var brickColors = ['#f22416', '#f2a516', '#fbff26', '#4ff00a', '#00ff77', '#00e2ed', '#0894ff', '#8095ff', '#723fd1', '#cb2af7', '#ff0dc7'];\r\n  var brickShiftLeft = true;\r\n  var brickSpeed = Math.random() * .5;\r\n\r\n  var origScore = data.score;\r\n  var score = origScore;\r\n  var highScore = data.highScore;\r\n  var lives = data.lives;\r\n  var bricksDestroyed = 0;\r\n  // console.log('how many lives: ' + lives)\r\n  var won = false;\r\n\r\n  var autoplay = true;\r\n\r\n  useEffect(() => {\r\n    // console.log('setup')\r\n    setup();\r\n  });\r\n\r\n  function setup() {\r\n    modal = document.getElementById(\"myModal\");\r\n    canvas = document.getElementById(\"myCanvas\");\r\n    text = document.getElementById(\"text\");\r\n    ctx = canvas.getContext(\"2d\");\r\n    brickRowCount = Math.floor(Math.random() * 4 + 5);\r\n    brickColumnCount = Math.floor(Math.random() * 6 + 8);\r\n    // brickRowCount = 2;\r\n    // brickColumnCount = 2;\r\n    brickSpace = canvas.width / brickColumnCount;\r\n    brickWidth = brickSpace * (Math.random() * .25 + .75);\r\n    brickPadding = brickSpace - brickWidth;\r\n    brickHeight = Math.floor(60 * Math.random()) + 30;\r\n    // brickWidth = (4 * brickSpace / 5);\r\n    // brickHeight = 120;\r\n    // brickPadding = brickSpace / 5;\r\n\r\n    brickOffsetTop = 30;\r\n    brickOffsetLeft = (canvas.width - (brickColumnCount * brickSpace - brickPadding)) / 2\r\n    brickOffsetCap = brickPadding;\r\n    brickCount = brickRowCount * brickColumnCount;\r\n\r\n    x = canvas.width / 2;\r\n    y = canvas.height - 30;\r\n    paddleX = (canvas.width - paddleWidth) / 2;\r\n    if (autoplay) {\r\n      // ballSpeed = 9;\r\n    }\r\n    for (var i = 0; i < brickRowCount; i++) {\r\n      brickColors[i] = getRandomColor();\r\n    }\r\n    for (var c = 0; c < brickColumnCount; c++) {\r\n      bricks[c] = [];\r\n      for (var r = 0; r < brickRowCount; r++) {\r\n        bricks[c][r] = { x: 0, y: 0, status: 1 };\r\n      }\r\n    }\r\n    draw();\r\n  }\r\n\r\n  function drawBricks() {\r\n    for (var c = 0; c < brickColumnCount; c++) {\r\n      for (var r = 0; r < brickRowCount; r++) {\r\n        if (bricks[c][r].status === 1) {\r\n          var brickX = (c * (brickWidth + brickPadding)) + brickOffsetLeft;\r\n          var brickY = (r * (brickHeight + brickPadding / 2)) + brickOffsetTop;\r\n          bricks[c][r].x = brickX;\r\n          bricks[c][r].y = brickY;\r\n          ctx.beginPath();\r\n          ctx.rect(brickX, brickY, brickWidth, brickHeight);\r\n          ctx.fillStyle = brickColors[r];\r\n          ctx.fill();\r\n          ctx.closePath();\r\n        }\r\n      }\r\n    }\r\n    if (brickShiftLeft) {\r\n      brickOffsetLeft -= brickSpeed;\r\n      if (brickOffsetLeft <= 0) {\r\n        brickShiftLeft = false\r\n      }\r\n    }\r\n    else {\r\n      brickOffsetLeft += brickSpeed;\r\n      if (brickOffsetLeft >= brickOffsetCap) {\r\n        brickShiftLeft = true\r\n      }\r\n    }\r\n  }\r\n\r\n  function drawBall() {\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, ballRadius, 0, Math.PI * 2);\r\n    ctx.fillStyle = \"#dbdbdb\";\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  }\r\n\r\n  function drawPaddle() {\r\n    ctx.beginPath();\r\n    if (autoplay) {\r\n      paddleX = x - (paddleWidth / 2)\r\n    }\r\n    ctx.rect(paddleX, canvas.height - paddleHeight, paddleWidth, paddleHeight);\r\n    ctx.fillStyle = \"#dbdbdb\";\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  }\r\n\r\n  function drawLives() {\r\n    ctx.font = \"90px monospace\";\r\n    ctx.fillStyle = \"#919191\";\r\n    ctx.fillText(\"Lives: \" + lives, 8, 700);\r\n  }\r\n\r\n  function drawScore() {\r\n    ctx.font = \"90px monospace\";\r\n    ctx.fillStyle = \"#919191\";\r\n    ctx.fillText(\"Score: \" + score, 8, 800);\r\n  }\r\n\r\n  function drawHighScore() {\r\n    ctx.font = \"90px monospace\";\r\n    ctx.fillStyle = \"#919191\";\r\n    ctx.fillText(\"High Score: \" + highScore, 8, 900);\r\n  }\r\n\r\n  function draw() {\r\n    if (ctx !== undefined) {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      drawHighScore();\r\n      drawScore();\r\n      drawLives();\r\n      if (!pauseGame) {\r\n        drawBricks();\r\n        drawBall();\r\n        drawPaddle();\r\n        collisionDetection();\r\n        if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {\r\n          dx = -dx;\r\n        }\r\n        if (y + dy < ballRadius) {\r\n          dy = -dy;\r\n        } else if (y + dy > canvas.height - ballRadius) {\r\n          // console.log(' ball touched bottom,\\n' + paddleX + ' < ' + x + ' < ' + (paddleX + paddleWidth))\r\n          if (x > paddleX && x < paddleX + paddleWidth) {\r\n            dy = -dy;\r\n          }\r\n          else {\r\n            lives--;\r\n            // console.log('lost a life, lives remaining: ' + lives)\r\n            if (lives === 0) {\r\n              // console.log('lives left: ' + lives)\r\n              text.innerHTML = \"Game Over. Score: \" + score;\r\n              modal.style.display = \"block\";\r\n              document.getElementById('modal-content').classList.add('lose');\r\n              pauseGame = true;\r\n              won = false;\r\n            }\r\n            else {\r\n              x = canvas.width / 2;\r\n              y = canvas.height - 30;\r\n              dx = 1;\r\n              dy = -1;\r\n              paddleX = (canvas.width - paddleWidth) / 2;\r\n            }\r\n          }\r\n        }\r\n        x += dx * (ballSpeed + ballSpeed * (bricksDestroyed / brickCount));\r\n        y += dy * (ballSpeed + ballSpeed * (bricksDestroyed / brickCount));\r\n        // console.log(ballSpeed + ballSpeed * (bricksDestroyed / brickCount));\r\n        if (rightPressed) {\r\n          paddleX += 7;\r\n          if (paddleX + paddleWidth > canvas.width) {\r\n            paddleX = canvas.width - paddleWidth;\r\n          }\r\n        }\r\n        else if (leftPressed) {\r\n          paddleX -= 7;\r\n          if (paddleX < 0) {\r\n            paddleX = 0;\r\n          }\r\n        }\r\n        requestAnimationFrame(draw);\r\n      }\r\n    }\r\n  }\r\n\r\n  function collisionDetection() {\r\n    for (var c = 0; c < brickColumnCount; c++) {\r\n      for (var r = 0; r < brickRowCount; r++) {\r\n        var b = bricks[c][r];\r\n        if (b.status === 1) {\r\n          if (x > b.x && x < b.x + brickWidth && y > b.y && y < b.y + brickHeight) {\r\n            if (y - ballSpeed <= b.y || y >= b.y + brickHeight - ballSpeed) {\r\n              dy = -dy;\r\n            }\r\n            else {\r\n              dx = -dx;\r\n            }\r\n            b.status = 0;\r\n            bricksDestroyed++;\r\n            score += (brickRowCount - r);\r\n            if (bricksDestroyed === (brickRowCount * brickColumnCount)) {\r\n              // console.log(' score: ' + score, '\\n origScore: ' + origScore + '\\n rows: ' + brickRowCount + '\\n cols: ' + brickColumnCount + '\\n lives: ' + lives)\r\n              text.innerHTML = \"Stage Complete! Score: \" + score;\r\n              modal.style.display = \"block\";\r\n              document.getElementById('modal-content').classList.add('win');\r\n              pauseGame = true;\r\n              won = true\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function getRandomColor() {\r\n    return brickColors[Math.floor(Math.random() * 11)];\r\n  }\r\n\r\n  function keyDownHandler(e) {\r\n    if (e.key === \"Right\" || e.key === \"ArrowRight\") {\r\n      rightPressed = true;\r\n    }\r\n    else if (e.key === \"Left\" || e.key === \"ArrowLeft\") {\r\n      leftPressed = true;\r\n    }\r\n  }\r\n\r\n  function keyUpHandler(e) {\r\n    if (e.key === \"Right\" || e.key === \"ArrowRight\") {\r\n      rightPressed = false;\r\n    }\r\n    else if (e.key === \"Left\" || e.key === \"ArrowLeft\") {\r\n      leftPressed = false;\r\n    }\r\n  }\r\n\r\n  function mouseMoveHandler(e) {\r\n    if (canvas !== undefined && !autoplay) {\r\n      var relativeX = e.clientX - canvas.offsetLeft;\r\n      if (relativeX > 0 && relativeX < canvas.width) {\r\n        paddleX = relativeX - paddleWidth / 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  function mouseDownHandler(e) {\r\n    if (e.target === modal && !restarted) {\r\n      restarted = true;\r\n      modal.style.display = \"none\";\r\n      let note = document.getElementById('modal-content')\r\n      if(note.classList.contains('lose')){\r\n        note.classList.remove('lose');\r\n      }\r\n      if(note.classList.contains('win')){\r\n        note.classList.remove('win');\r\n      }      \r\n      pauseGame = false;\r\n      // console.log('restarting')\r\n      if (won) {\r\n        updateGame({ score: score, lives: lives, candidateHighScore: score })\r\n      }\r\n      else {\r\n        updateGame({ score: 0, lives: 3, candidateHighScore: score })\r\n      }\r\n      // document.location.reload();\r\n    }\r\n  }\r\n\r\n  document.addEventListener(\"keydown\", keyDownHandler, false);\r\n  document.addEventListener(\"keyup\", keyUpHandler, false);\r\n  document.addEventListener(\"mousemove\", mouseMoveHandler, false);\r\n  document.addEventListener(\"mousedown\", mouseDownHandler, false);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"myModal\" className=\"modal\">\r\n        <div id='modal-content' className=\"modal-content\">\r\n          <p id='text' ></p>\r\n        </div>\r\n      </div>\r\n      <canvas id='myCanvas' width={window.innerWidth} height={window.innerHeight}></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: getData(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateGame: data => dispatch(updateGame(data))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    UPDATE_GAME\r\n} from './actions';\r\n\r\nconst initialState = { score: 0, highScore: 0, lives: 3 }\r\n\r\nexport const gameData = ( state = initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case UPDATE_GAME: {\r\n            const { data } = payload;\r\n            return {\r\n                ...state,\r\n                score: data.score,\r\n                highScore: Math.max(state.highScore, data.candidateHighScore),\r\n                lives: data.lives\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore, combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport { gameData } from './reducers';\r\n\r\nconst reducers = { \r\n    gameData,\r\n};\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: autoMergeLevel2\r\n}\r\n\r\nconst rootReducer = combineReducers(reducers);\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const configStore = () => \r\n    createStore(\r\n        persistedReducer\r\n    );","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { configStore } from './store'\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n\nconst store = configStore()\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor} loading={<div>Loading...</div>}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const UPDATE_GAME = \"UPDATE_GAME\";\r\nexport const updateGame = data => ({\r\n    type: UPDATE_GAME,\r\n    payload: { data }\r\n})\r\n"],"sourceRoot":""}